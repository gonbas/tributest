function mobileSkipLink(t) {
    var e = jQuery(".skip-content"), a = jQuery(".skip-link"), o = jQuery(t), i = o.attr("data-target-element"), n = jQuery(i), r = n.hasClass("skip-active") ? 1 : 0;
    a.removeClass("skip-active"), e.removeClass("skip-active"), o.removeClass("skip-active"), r ? o.removeClass("skip-active") : (o.addClass("skip-active"), n.addClass("skip-active"))
}
var ICO = ICO || {};
!function ($) {
    var pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1, $window = $(window), body = $("body"), deviceAgent = navigator.userAgent.toLowerCase(), isMobileAlt = deviceAgent.match(/(iphone|ipod|ipad|android|iemobile)/), imageZoomThreshold = 20;
    ICO.header = {
        init: function () {
            ICO.header.logoRetinaInit(), 1 == $("#main-header").data("sticky") && $.fn.sticky && ICO.header.stickyInit()
        }, logoRetinaInit: function () {
            var t = $(".header-wrapper .header-container .logo img.x1");
            pixelRatio > 1 && ($(".template-index").length > 0 ? t.attr("src", t.attr("src").replace(frontendData.logoHome, frontendData.logoHomeRetina)) : t.attr("src", t.attr("src").replace(frontendData.logo, frontendData.logoRetina)))
        }, stickyInit: function () {
            $("#main-header").sticky({topSpacing: 0}), $("#main-header-mobile").sticky({topSpacing: 0})
        }
    }, ICO.page = {
        init: function () {
            if ("resultLoading" != $("body").find("#resultLoading").attr("id") && $("body").append('<div id="resultLoading" style="display:none"><div class="spinner"><div class="circle"></i></div><div class="bg"></div></div>'), $.browserSelector(), $("html").hasClass("chrome") && $.smoothScroll(), $("html").hasClass("safari") && $.smoothScroll(), pixelRatio > 1 && ICO.page.imageRetinaInit(), ICO.page.videoInit(), $("#popup_newsletter").length > 0) {
                var t = $("#popup_newsletter");
                ICO.page.newsletterPopupInit(t)
            }
        }, imageRetinaInit: function () {
            $("img[data-srcX2]").each(function () {
                $(this).hasClass("lazy") || $(this).hasClass("lazyOwl") || $(this).attr("src", $(this).attr("data-srcX2"))
            })
        }, disableLinkMobile: function () {
            $(".products-grid").find("a.product-image").click(function (t) {
                return t.preventDefault(), !1
            })
        }, videoInit: function () {
            $(".container-main-video .upb_video-wrapper .upb_video-bg em").click(function () {
                return $(this).hasClass("fa-play") ? $(".container-main-video .upb_video-wrapper .upb_video-bg video").get(0).play() : $(".container-main-video .upb_video-wrapper .upb_video-bg video").get(0).pause(), $(this).toggleClass("fa-pause").toggleClass("fa-play"), !1
            })
        }, newsletterPopupInit: function (t) {
            $("#popup_newsletter .subcriper_label input").on("click", function () {
                $(this).parent().find("input:checked").length ? ICO.collection.createCookie("newsletterSubscribe", "true", 1) : ICO.collection.readCookie("newsletterSubscribe")
            }), $("#popup_newsletter .input-box button.button").on("click", function () {
                var t = $(this);
                setTimeout(function () {
                    t.parent().find("input#popup-newsletter").hasClass("validation-failed") || ICO.collection.createCookie("newsletterSubscribe", "true", 1)
                }, 500)
            }), null == ICO.collection.readCookie("newsletterSubscribe") && ($.colorbox({
                inline: !0,
                href: t,
                opacity: .3,
                speed: 500,
                innerWidth: newsletterData.width + "px",
                innerHeight: newsletterData.height + "px",
                fixed: !0,
                onOpen: function () {
                    $("#cboxContent").addClass("newsletterbox"), $("#cboxLoadingGraphic").addClass("box-loading"), $(".newsletterbox").css({
                        "background-image": "url(" + newsletterData.bg_image + ")",
                        "background-position": "left top",
                        "background-repeat": "no-repeat",
                        "background-color": newsletterData.bg_color,
                        "background-size": "cover"
                    })
                },
                onComplete: function () {
                    setTimeout(function () {
                        $("#cboxLoadingGraphic").removeClass("box-loading")
                    }, 800)
                },
                onClosed: function () {
                    $.colorbox.remove(), $("#cboxContent").removeClass("newsletterbox"), $("#cboxContent").attr("style", "")
                }
            }), ICO.page.newsletterResize(), $window.smartresize(function () {
                $("#colorbox").find(".block-subscribe").length > 0 && ICO.page.newsletterResize()
            }))
        }, newsletterResize: function () {
            var t = "90%", e = newsletterData.height + "px";
            $(window).width() > 960 && (t = newsletterData.width), $(window).height() > 700 && (e = newsletterData.height), $(window).width() <= 600 ? $(".newsletterbox .block-subscribe").css({
                width: "90%",
                top: "10%"
            }) : $(".newsletterbox .block-subscribe").css({
                width: "50%",
                top: "15%"
            }), $.colorbox.settings.height = e, $.colorbox.settings.width = t, $.colorbox.resize({height: e, width: t})
        }
    }, ICO.collection = {
        init: function () {
            if ($(".owl-carousel").length > 0) {
                var t = $(".owl-carousel");
                t.each(function () {
                    ICO.collection.carouselInit($(this))
                })
            }
            if ($(".products-grid.grid-product-masonry").length > 0) {
                var e = $(".grid-product-masonry");
                e.each(function () {
                    ICO.collection.productGridSetup($(this))
                })
            }
            if ($(".product-deal .product-date").length > 0) {
                var a = $(".product-date");
                a.each(function () {
                    ICO.collection.productDealInit($(this))
                })
            }
            ICO.collection.layoutSwitch(), null != ICO.collection.readCookie("products-listmode") && ICO.collection.layoutListInit(), $(document).on("click", ".close-box", function () {
                $(this).parents(".box-popup").removeClass("show")
            }), $(document).on("click", ".add-to-wishlist", function (t) {
                t.preventDefault(), ICO.collection.addToWishlist($(this))
            }), $(document).on("click", ".remove-wishlist", function (t) {
                t.preventDefault(), ICO.collection.removeWishlist($(this))
            }), $(document).on("click", ".add-to-cart", function (t) {
                t.preventDefault(), ICO.collection.addToCart($(this))
            }), $(document).on("click", ".btn-remove-cart", function (t) {
                t.preventDefault(), ICO.collection.removeCartInit($(this).data("id"))
            }), ICO.collection.quickshopInit(), ICO.collection.shareCounts(), ICO.collection.sidebarMenuInit(), ICO.collection.layerFilterInit(), ICO.collection.colorSwatchGridInit()
        }, createCookie: function (t, e, a) {
            var o;
            if (a) {
                var i = new Date;
                i.setTime(i.getTime() + 24 * a * 60 * 60 * 1e3), o = "; expires=" + i.toGMTString()
            } else o = "";
            document.cookie = escape(t) + "=" + escape(e) + o + "; path=/"
        }, readCookie: function (t) {
            for (var e = escape(t) + "=", a = document.cookie.split(";"), o = 0; o < a.length; o++) {
                for (var i = a[o]; " " === i.charAt(0);)i = i.substring(1, i.length);
                if (0 === i.indexOf(e))return unescape(i.substring(e.length, i.length))
            }
            return null
        }, eraseCookie: function (t) {
            ICO.collection.createCookie(t, "", -1)
        }, carouselInit: function (t) {
            var e = t.parent().find(".data-carousel");
            if (e.data("auto"))var a = e.data("auto"); else var a = !1;
            e.data("mobile") ? t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                itemsCustom: [[0, e.data("mobile")], [450, e.data("mobile")], [767, 4]],
                navigationText: [e.data("prev"), e.data("next")]
            }) : t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                navigationText: [e.data("prev"), e.data("next")]
            })
        }, productGridSetup: function (t) {
            t.imagesLoaded(function () {
                t.isotope({resizable: !1, itemSelector: ".product", layoutMode: "fitRows"})
            }), t.appear(function () {
                isMobileAlt ? setTimeout(function () {
                    t.isotope("layout"), ICO.collection.animateItems(t)
                }, 500) : ICO.collection.animateItems(t)
            }), $("#products").on("isotope:update", function (e) {
                t.isotope("layout")
            })
        }, colorSwatchGridInit: function () {
            $(".configurable-swatch-list li a").on("click", function (t) {
                t.preventDefault();
                var e = $(this).parents(".product-action").find(".product-image");
                e.find("img.main").attr("src", $(this).data("image"))
            })
        }, animateItems: function (t) {
            t.find(".product").each(function (t) {
                $(this).delay(200 * t).animate({opacity: 1}, 500, "easeOutExpo", function () {
                    $(this).addClass("item-animated")
                })
            })
        }, layoutSwitch: function () {
            var t = !1;
            $(document).on("click", "span.layout-opt", function (e) {
                var a = $("#products"), o = $(this).data("layout");
                $(".toolbar .view-mode .layout-opt").removeClass("active"), $(this).addClass("active"), "list" == o ? null == ICO.collection.readCookie("products-listmode") && ICO.collection.createCookie("products-listmode", 1, 10) : ICO.collection.eraseCookie("products-listmode"), t || (t = !0, a.animate({opacity: 0}, 300), setTimeout(function () {
                    a.find(".product").removeClass("product-layout-list product-layout-grid"), a.find(".product").addClass("product-layout-" + o), $(".products-grid").length > 0 && $(".products-grid").children().css("min-height", "0"), a.isotope("layout"), a.animate({opacity: 1}, 200), t = !1
                }, 300), e.preventDefault())
            })
        }, layoutListInit: function () {
            var t = $("#products");
            t.css("opacity", 0), $('.toolbar .view-mode span[data-layout="grid"]').removeClass("active"), $('.toolbar .view-mode span[data-layout="list"]').addClass("active"), t.find(".product").removeClass("product-layout-list product-layout-grid"), t.find(".product").addClass("product-layout-list"), setTimeout(function () {
                t.animate({opacity: 1}, 200)
            }, 300)
        }, productDealInit: function (t) {
            var e = t.data("date");
            if (e) {
                var a = {date: e};
                $.extend(a, countdown), $.extend(a, countdownConfig), countdownTemplate && (a.template = countdownTemplate), t.countdown(a)
            }
        }, quickshopInit: function () {
            $(document).on("initproduct", "#product-form", function () {
                var t = $(this).find("#product-select");
                if (1 == t.length) {
                    var e = ($(this).find(".product-form"), productsObj["id" + $(this).data("product-id")]);
                    new Shopify.OptionSelectors(t.attr("id"), {
                        product: e,
                        onVariantSelected: ICO.collection.selectCallback,
                        enableHistoryState: !1
                    }), e.available && e.options.length > 1 && Shopify.linkOptionSelectors(e), ICO.collection.createSwatch(e, $(this)), 1 == e.variants.length && "Default Title" == e.variants[0].title && $(".selector-wrapper").hide();
                    for (var a = !1, o = 0; o < e.variants.length; o++) {
                        var i = e.variants[o];
                        if (i.available && 0 == a) {
                            a = !0;
                            for (var n = 0; n < i.options.length; n++)$(".single-option-selector:eq(" + n + ")").val(i.options[n]).trigger("change")
                        }
                    }
                }
            }), $("#product-form").trigger("initproduct"), $window.smartresize(function () {
                $("#colorbox").find(".quick-view").length > 0 && ICO.collection.quickshopResize()
            }), $.colorbox.settings.maxWidth = "90%", $.colorbox.settings.width = "1000px", $(document).on("click", ".quickview", function () {
                var $prod = $(this).closest(".product");
                eval($prod.find("[data-id^=product-block-json-]").html());
                var handler = $prod.find("[data-id^=product-block-template-]").data('handle');
                $prod.find("[data-id^=product-block-template-]").load('/product/'+handler+'/preview', function() {
                    var template = $prod.find("[data-id^=product-block-template-]").html();
                    return $.colorbox({
                        opacity: .3, fixed: !0, onOpen: function () {
                            $("body").addClass("cbox-active")
                        }, onClosed: function () {
                            $.colorbox.remove(), $("body").removeClass("cbox-active"), ICO.productMediaManager.destroyZoom()
                        }, html: [template].join(""), onComplete: function () {
                            if (ICO.verticleScroll.init(), $(".owl-carousel").length > 0) {
                                var t = $(".owl-carousel");
                                t.each(function () {
                                    ICO.collection.carouselInit($(this))
                                })
                            }
                            ICO.productMediaManager.init(), $("#product-form").trigger("initproduct"), $.colorbox.resize(), ICO.collection.quickshopResize(), frontendData.enableCurrency && currenciesCallbackSpecial(".quick-view span.money")
                        }
                    })
                })
            })
        }, createSwatch: function (t, e) {
            var a = new Array;
            if (swatch_size_enable && a.push("Size"), swatch_color_enable && (a.push("Color"), a.push("Colour")), a.length > 0) {
                var o = ".png", n = !1, r = !1, l = 0, s = asset_url.substring(0, asset_url.lastIndexOf("?"));
                for (i = 0; i < t.options.length; i++) {
                    var c = "";
                    if (c = "object" == typeof t.options[i] ? t.options[i].name : t.options[i], n = !1, r = !1, a.indexOf(c) > -1) {
                        n = !0, l = i;
                        var d = c.toLowerCase();
                        if (/color|colour/i.test(d) && (r = !0), n) {
                            var u = "", p = "";
                            /size/i.test(c.toLowerCase()), u += '<div class="swatch ' + d + ' clearfix" data-option-index="' + l + '">', u += '<div class="header"><span>' + c + "</span>" + p + "</div><div>";
                            var m = new Array;
                            for (j = 0; j < t.variants.length; j++) {
                                var f = t.variants[j], g = f.options[l], h = ICO.collection.convertToSlug(g), v = "swatch-" + l + "-" + h;
                                m.indexOf(g) < 0 && (u += '<div data-value="' + g + '" class="swatch-element ' + (r ? "color" : "") + h + (f.available ? " available " : " soldout ") + '">', r && (u += '<div class="tooltip">' + g + "</div>"), u += '<input id="' + v + '" type="radio" name="option-' + l + '" value="' + g + '"' + (0 == j ? " checked " : "") + (f.available ? "" : " disabled") + "/>", r ? (u += '<label for="' + v + '" class="img"><i style="background-color:' + h + "; background-image: url(" + s + h + o + ')">', u += '<img class="crossed-out" src="' + s + 'soldout.png" />', u += "</i></label>") : (u += '<label for="' + v + '">' + g, u += '<img class="crossed-out" src="' + s + 'soldout.png" />', u += "</label>"), u += "</div>", m.push(g))
                            }
                            u += "</div></div>", e.find("#product-variants > select").after(u), e.find(".swatch :radio").change(function () {
                                var t = $(this).closest(".swatch").attr("data-option-index"), e = $(this).val();
                                $(this).closest("form").find(".single-option-selector").eq(t).val(e).trigger("change")
                            })
                        }
                    }
                }
            }
        }, convertToSlug: function (t) {
            return t.toLowerCase().replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-")
        }, selectCallback: function (t, e) {
            if (t)for (i = 0; i < t.options.length; i++)$('.swatch[data-option-index="' + i + '"] :radio[value="' + t.options[i] + '"]').prop("checked", !0);
            if (t)t.available ? (t.compare_at_price > t.price ? $("#price").html('<del class="price_compare">' + Shopify.formatMoney(t.compare_at_price, money_format) + '</del><div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>") : $("#price").html('<div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>"), frontendData.enableCurrency && currenciesCallbackSpecial("#price span.money"), $("#add").removeClass("disabled").removeAttr("disabled").html($("#add").data("addtocart")), t.inventory_management && t.inventory_quantity <= 0 ? ($("#selected-variant").html(e.product.title + " - " + t.title), $("#backorder").removeClass("hidden")) : $("#backorder").addClass("hidden")) : ($("#backorder").addClass("hidden"), $("#add").html($("#add").data("soldout")).addClass("disabled").attr("disabled", "disabled")); else {
                var a = $("#add").data("unavailable"), o = $(".selector-wrapper select").filter(function () {
                        return "" == $(this).val()
                    }).length > 0;
                o && (a = $("#add").data("addtocart")), $("#price del").remove(), $("#backorder").addClass("hidden"), $("#add").html(a).addClass("disabled").attr("disabled", "disabled")
            }
            if (t && t.featured_image) {
                var n = Shopify.Image.removeProtocol(t.featured_image.src);
                $(".product-image-thumbs .thumb-link").filter('[data-zoom-image="' + n + '"]').trigger("click")
            }
            t && t.sku ? $("#sku").removeClass("hidden").find("span").html(t.sku) : $("#sku").addClass("hidden").find("span").html("")
        }, quickshopResize: function () {
            var t, e = 1e3, a = .9;
            t && clearTimeout(t), t = setTimeout(function () {
                $("#cboxOverlay").is(":visible") && ($.colorbox.resize({width: $(window).width() > e + 20 ? e : Math.round($(window).width() * a)}), $(".cboxPhoto").css({
                    width: $("#cboxLoadedContent").innerWidth(),
                    height: "auto"
                }), $("#cboxLoadedContent").height($(".cboxPhoto").height()), $.colorbox.resize())
            }, 300)
        }, addToWishlist: function (t) {
            var e = t.parents("form").serialize(), a = t.data("id"), o = $("body").find(".wishlist-" + a + " .add-to-wishlist");
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/favorites/add/'+a, async: !0, cache: !1, beforeSend: function () {
                    $("#resultLoading").show()
                }, success: function () {
                    var e = t.closest(".product"), a = $("#wishlist-box");
                    a.find(".product-link").attr("href", e.find(".product-name a").attr("href")), a.find(".product-img").attr("src", e.find(".product-image img").attr("src")).attr("alt", e.find(".product-name a").html()), a.find(".product-title .product-link").html(e.find(".product-name a").html()), a.find(".product-price").html(e.find(".price").html()), o.each(function () {
                        $(this).removeClass("add-to-wishlist").addClass("added").attr("title", $(this).attr("data-added")), $(this).find("span").html($(this).attr("data-added")), $(this).find("i").removeClass("fa-heart-o").addClass("fa-heart")
                    }), setTimeout(function () {
                        $("#resultLoading").hide(), a.addClass("show"), setTimeout(function () {
                            a.removeClass("show")
                        }, 5e3)
                    }, 500)
                }, error: function (t) {
                    var e = $("#error-notice"), a = $.parseJSON(t.responseText);
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function () {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function () {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                }
            })
        }, removeWishlist: function (e) {
            var a = e.parents("form").serialize(), o = e.parents(".item");
            $.ajax({
                type: 'DELETE',
                dataType: 'json',
                url: '/favorites/remove/'+ e.data('handle'), beforeSend: function () {
                    $("#resultLoading").show()
                }, success: function () {
                    $("#resultLoading").hide(), o.fadeOut(500)
                }, error: function () {
                    var e = $("#error-notice"), a = $.parseJSON(t.responseText);
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function () {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function () {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                }
            })
        }, addToCart: function (t) {
            var e = t.parents("form");
            $.ajax({
                type: "POST",
                url: "/cart/add",
                async: !0,
                data: e.serialize(),
                dataType: "json",
                beforeSend: function () {
                    $("#resultLoading").show()
                },
                error: function (t) {
                    var e = $("#error-notice"), a = $.parseJSON(t.responseText);
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function () {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function () {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                },
                success: function (t) {
                    var o = (parseInt(e.find('input[name="quantity"]').val()), $("#cart-box"));
                    o.find(".product-link").attr("href", t.item.product.url), o.find(".product-img").attr("src", t.item.image).attr("alt", t.item.product.name), o.find(".product-title .product-link").html(t.item.product.name), o.find(".product-price").html(t.item.priceNumber), frontendData.enableCurrency && currenciesCallbackSpecial("#cart-box span.money"), setTimeout(function () {
                        $("#resultLoading").hide(), o.addClass("show"), setTimeout(function () {
                            o.removeClass("show")
                        }, 5e3)
                    }, 500), ICO.collection.updateCartInfo(a, ".cart-container .cart-wrapper .cart-inner-content")
                },
                cache: !1
            })
        }, updateCartInfo: function (t, e) {
            var a = $(e);
            a.length && (a.empty(), $.each(t, function (e, o) {
                if ("items" == e) {
                    var i = "";
                    o.length ? (i += '<div class="cart-content">', i += '<ul class="clearfix">', $.each(o, function (t, e) {
                        i += '<li class="item-cart">', i += '<a class="product-image" href="' + e.url + '"><img alt="' + e.title + '" src="' + Shopify.resizeImage(e.image, "small") + '" /></a>', i += '<div class="product-details row-fluid show-grid">', i += '<p class="product-name"><a href="' + e.url + '"><span>' + e.title + "</span></a></p>", i += '<div class="items"><span class="price">' + e.quantity + ' × <span class="amount">' + Shopify.formatMoney(e.price, money_format) + "</span></span></div>", i += '<div class="access"><a href="javascript: void(0);" class="btn-remove btn-remove-cart" data-id="' + e.variant_id + '" title="' + cartData.removeItemLabel + '"><i class="fa fa-trash"></i></a></div>', i += "</div>", i += "</li>"
                    }), i += "</ul>", i += '<p class="subtotal"><span class="label">' + cartData.totalLabel + '</span><span class="price">' + Shopify.formatMoney(t.total_price, money_format) + "</span></p>", i += "</div>", i += '<div class="cart-checkout"><a href="/cart" class="btn-button view-cart"><span>' + cartData.buttonViewCart + '</span></a><a href="/checkout" class="btn-button checkout-cart"><span>' + cartData.buttonCheckout + "</span></a></div>") : (i += '<div class="cart-content">', i += '<p class="no-items-in-cart">' + cartData.noItemLabel + "</p>", i += "</div>")
                }
                a.append(i)
            })), $(".icon-cart-header .cart-count").length > 0 && $(".icon-cart-header .cart-count").html(t.item_count), frontendData.enableCurrency && currenciesCallbackSpecial(".cart-wrapper .cart-inner span.money")
        }, removeCartInit: function (t, e) {
            var th = t;
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/cart/update',
                data: {slug:t, delete:true},
                beforeSend: function () {
                    $(".cartloading").show()
                },
                success: function (t) {
                    if($('.cart-table').length > 0) {
                        $('[data-id="'+th+'"]').parent().parent().parent().hide('fast');
                        $('[data-total]').text(t.cart ? t.cart.totalNumber : 0);
                        $('[data-subtotal]').text(t.cart ? t.cart.subtotalNumber: 0);
                        $(".cart-count").html(t.items)
                        $('[data-shipping]').text(t.cart ? t.cart.shippingNumber : 0);
                    }
                    "function" == typeof e ? e(t) : (ICO.collection.updateCartInfo(t, ".cart-container .cart-wrapper .cart-inner-content"), $(".cartloading").hide())
                },
                error: function (t, e) {
                    Shopify.onError(t, e)
                }
            })
        }, shareCounts: function () {
            var t = $(".sf-share-counts"), e = t.find("a.sf-share-fb"), a = t.find("a.sf-share-twit"), o = t.find("a.sf-share-pin"), i = t.find("a.sf-share-linked"), n = window.location.href.replace(window.location.hash, "");
            e.length > 0 && $.getJSON("https://graph.facebook.com/?id=" + n + "&callback=?", function (t) {
                void 0 !== t.shares && null !== t.shares && e.find(".count").html(t.shares), e.find(".count").addClass("animate")
            }), a.length > 0 && $.getJSON("https://urls.api.twitter.com/1/urls/count.json?url=" + n + "&callback=?", function (t) {
                void 0 !== t.count && null !== t.count && a.find(".count").html(t.count), a.find(".count").addClass("animate")
            }), i.length > 0 && $.getJSON("https://www.linkedin.com/countserv/count/share?url=" + n + "&callback=?", function (t) {
                void 0 !== t.count && null !== t.count && i.find(".count").html(t.count), i.find(".count").addClass("animate")
            }), o.length > 0 && $.getJSON("https://api.pinterest.com/v1/urls/count.json?url=" + n + "&callback=?", function (t) {
                void 0 !== t.count && null !== t.count && o.find(".count").html(t.count), o.find(".count").addClass("animate")
            }), body.on("click", ".sf-share-link", function () {
                return window.open($(this).attr("href")), !1
            })
        }, sidebarMenuInit: function () {
            $("#mobile-menu, #categories_nav").mobileMenu({
                accordion: !0,
                speed: 400,
                closedSign: "collapse",
                openedSign: "expand",
                mouseType: 0,
                easing: "easeInOutQuad"
            })
        }, sortbyFilter: function () {
            $(document).on("change", ".sort-by .field", function (t) {
                t.preventDefault();
                ICO.collection.updatePage();
            })
            $(document).on("click", ".pagination-search [data-value]", function (t) {
                t.preventDefault();
                $('.pagination-search [data-value]').removeClass('active');
                $(this).addClass('active');
                ICO.collection.updatePage();
            })
        }, limitedAsFilter: function () {
            $(document).on("change", ".limited-view .field", function (t) {
                t.preventDefault();
                ICO.collection.updatePage();
            })
        }, swatchListFilter: function () {

            $(document).on("click", ".fields .item", function (t) {
                t.preventDefault();

                if($(this).hasClass('active')) return false;
                else {
                    $(this).parent().parent().find('.item').removeClass('active');
                    $(this).addClass('active');
                }

                ICO.collection.updatePage();
            })

        }, updatePage: function () {

            var show = $('[name="limiter"]').val();
            var sort = $('[name="sort-by"]').val();
            var page = $('.pagination-search .active').data('value');

            var method = "get";
            var action = window.location.pathname;
            var form = document.createElement("form");
            form.setAttribute("method", method);
            form.setAttribute("action", action);

            $('[data-option]').each(function() {
                var options = $(this).attr('data-option');
                var values = [];

                $(this).find('.active input').each(function(i) {
                    values[i] = $(this).attr('value');
                })

                if(values.length > 0) {
                    var hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "options[" + options + "]");
                    hiddenField.setAttribute("value", JSON.stringify(values));
                    form.appendChild(hiddenField);
                }

            })

            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", "filter");
            hiddenField.setAttribute("value", sort);
            form.appendChild(hiddenField);

            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", "mostrar");
            hiddenField.setAttribute("value", show);
            form.appendChild(hiddenField);

            if(page) {
                var hiddenField = document.createElement("input");
                hiddenField.setAttribute("type", "hidden");
                hiddenField.setAttribute("name", "page");
                hiddenField.setAttribute("value", page);
                form.appendChild(hiddenField);
            }

            document.body.appendChild(form);
            form.submit();

        }, paginationActionInit: function () {
            $(document).on("click", ".pagination a", function (t) {
                t.preventDefault();
                var e = $(this);
                delete Shopify.queryParams.page, delete Shopify.queryParams.constraint, delete Shopify.queryParams.q, delete Shopify.queryParams.sort_by, ICO.collection.filterAjaxRequest(e.attr("href"))
            })
        }, layerFilterInit: function () {
            ICO.collection.sortbyFilter(), ICO.collection.limitedAsFilter(), ICO.collection.paginationActionInit(), ICO.collection.swatchListFilter(), ICO.collection.layerClearAllFilter(), ICO.collection.layerClearFilter()
        }, filterCreateUrl: function (t) {
            var e = $.param(Shopify.queryParams).replace(/%2B/g, "+");
            return t ? "" != e ? t + "?" + e : t : location.pathname + "?" + e
        }, filterAjaxRequest: function (t) {
            delete Shopify.queryParams.page;
            var e = ICO.collection.filterCreateUrl(t);
            ICO.collection.filterGetContent(e)
        }, filterGetContent: function (t) {
            $.ajax({
                type: "get", url: t, beforeSend: function () {
                    $("#resultLoading").show()
                }, success: function (e) {
                    var a = e.match("<title>(.*?)</title>")[1];
                    $("#collection-main").empty().html($(e).find("#collection-main").html()), $(".narrow-by-list").empty().html($(e).find(".narrow-by-list").html()), $(".pagination").empty().html($(e).find(".pagination").html()), $(".main-breadcrumbs").empty().html($(e).find(".main-breadcrumbs").html()), History.pushState({param: Shopify.queryParams}, a, t), setTimeout(function () {
                        $("html,body").animate({scrollTop: $(".toolbar").offset().top}, 500)
                    }, 100), $("#resultLoading").hide(), null != ICO.collection.readCookie("products-listmode") && ICO.collection.layoutListInit(), ICO.collection.productGridSetup($(".products-grid")), ICO.collection.layerClearFilter(), ICO.collection.layerClearAllFilter(), ICO.collection.colorSwatchGridInit(), ICO.footer.mobileAccordionInit(), SPR.registerCallbacks(), SPR.initRatingHandler(), SPR.initDomEls(), SPR.loadProducts(), SPR.loadBadges(), frontendData.enableCurrency && currenciesCallbackSpecial(".products-grid span.money")
                }, error: function () {
                    $("#resultLoading").hide()
                }
            })
        }, layerClearFilter: function () {
            $(".narrow-by-list .narrow-item").each(function () {
                var t = $(this);
                t.find("input:checked").length > 0 && t.find(".clear").click(function (e) {
                    var a = [];
                    Shopify.queryParams.constraint && (a = Shopify.queryParams.constraint.split("+")), t.find("input:checked").each(function () {
                        var t = jQuery(this), e = t.val();
                        if (e) {
                            var o = a.indexOf(e);
                            o >= 0 && a.splice(o, 1)
                        }
                    }), a.length ? Shopify.queryParams.constraint = a.join("+") : delete Shopify.queryParams.constraint, ICO.collection.filterAjaxRequest(), e.preventDefault()
                })
            })
        }, layerClearAllFilter: function () {
            $(".narrow-by-list").on("click", ".clearall", function (t) {
                t.preventDefault(), delete Shopify.queryParams.constraint, delete Shopify.queryParams.q, ICO.collection.filterAjaxRequest()
            })
        }
    }, ICO.productMediaManager = {
        destroyZoom: function () {
            $(".zoomContainer").remove(), $(".product-image-gallery .gallery-image").removeData("elevateZoom")
        }, createZoom: function (t) {
            if (ICO.productMediaManager.destroyZoom(), !(isMobileAlt || t.length <= 0)) {
                if (t[0].naturalWidth && t[0].naturalHeight) {
                    var e = t[0].naturalWidth - t.width() - imageZoomThreshold, a = t[0].naturalHeight - t.height() - imageZoomThreshold;
                    if (0 > e && 0 > a)return void t.parents(".product-image").removeClass("zoom-available");
                    t.parents(".product-image").addClass("zoom-available")
                }
                "inside" == dataZoom.position ? t.elevateZoom({
                    zoomType: "inner",
                    easing: !0,
                    cursor: "crosshair"
                }) : t.elevateZoom({
                    zoomWindowPosition: dataZoom.position,
                    easing: !0
                }), dataZoom.lightbox && t.bind("click", function (e) {
                    var a = t.data("elevateZoom");
                    return a.closeAll(), $.fancybox(a.getGalleryList()), !1
                })
            }
        }, swapImage: function (t) {
            t = $(t), t.addClass("gallery-image"), ICO.productMediaManager.destroyZoom();
            var e = $(".product-image-gallery");
            t[0].complete ? (e.find(".gallery-image").removeClass("visible"), e.append(t), t.addClass("visible"), ICO.productMediaManager.createZoom(t)) : (e.addClass("loading"), e.append(t), imagesLoaded(t, function () {
                e.removeClass("loading"), e.find(".gallery-image").removeClass("visible"), t.addClass("visible"), ICO.productMediaManager.createZoom(t)
            }))
        }, wireThumbnails: function () {
            $(".product-image-thumbs .thumb-link").click(function (t) {
                t.preventDefault();
                var e = $(this), a = $("#image-" + e.data("image-index"));
                ICO.productMediaManager.swapImage(a)
            })
            $('.swatch.color input').on('change', function() {
                var value = $('.swatch.color input:checked').attr('value');
                if($('[data-color="'+value+'"]').length > 0) {
                    var e = $('[data-color="'+value+'"]').eq(0), a = $("#image-" + e.data("image-index"));
                    $('[data-color]').hide();
                    $('[data-color="'+value+'"]').show();
                    ICO.productMediaManager.swapImage(a)
                }
            })
            if ($('[data-color]').length > 0) {
                if(window.location.hash != '') {
                    var color = document.URL.substr(document.URL.indexOf('#')+1);
                    if(color > 0) {
                        if($('[name="options[0]"][value="1"]').length > 0) {

                            $('[name="values[0]"][value="'+color+'"]').prop('checked', true);

                            var e = $('[data-color="'+color+'"]').eq(0), a = $("#image-" + e.data("image-index"));
                            $('[data-color]').hide();
                            $('[data-color="'+color+'"]').show();

                            $(window).load(function() {
                                ICO.productMediaManager.swapImage(a);
                            })

                        }
                    }
                }
            }
        }, initZoom: function () {
            ICO.productMediaManager.createZoom($(".gallery-image.visible"))
        }, init: function () {
            ICO.productMediaManager.imageWrapper = $(".product-img-box"), $window.smartresize(function () {
                ICO.productMediaManager.initZoom()
            }), ICO.productMediaManager.initZoom(), ICO.productMediaManager.wireThumbnails()
        }
    }, ICO.verticleScroll = {
        init: function () {
            if ($(".product-img-box .verticl-carousel").length > 0) {
                var t = $(".product-img-box .verticl-carousel");
                ICO.verticleScroll.carouselInit(t)
            }
        }, carouselInit: function (t) {
            var e = t.find("a").length;
            3 >= e && t.parents(".more-views-verticle").find(".more-views-nav").hide(), $(".product-img-box #carousel-up").on("click", function () {
                if (!$(".product-img-box .verticl-carousel").is(":animated")) {
                    var t = $(".product-img-box .verticl-carousel > a:last-child"), e = $(".product-img-box .verticl-carousel > a:last-child").clone();
                    e.prependTo(".product-img-box .verticl-carousel"), $(".product-img-box .verticl-carousel").animate({top: "-=85"}, 0).stop().animate({top: "+=85"}, 250, function () {
                        t.remove()
                    }), ICO.productMediaManager.init()
                }
            }), $(".product-img-box #carousel-down").on("click", function () {
                if (!$(".product-img-box .verticl-carousel").is(":animated")) {
                    var t = $(".product-img-box .verticl-carousel > a:first-child"), e = $(".product-img-box .verticl-carousel > a:first-child").clone();
                    e.appendTo(".product-img-box .verticl-carousel"), $(".product-img-box .verticl-carousel").animate({top: "-=85"}, 250, function () {
                        t.remove(), $(".product-img-box .verticl-carousel").animate({top: "+=85"}, 0)
                    }), ICO.productMediaManager.init()
                }
            })
        }
    };
    var infowindow, bounds, directory_bounds, mapTypeIdentifier = "", mapType, mapColor, mapSaturation, mapCenterLat, mapCenterLng, companyPos = "", isDraggable = !0, latitude, longitude, mapCoordinates, markersArray = [], pinTitle, pinContent, pinLink, address, pinButtonText, pinLogoURL = "";
    ICO.map = {
        init: function () {
            var t, e = $(".map-canvas");
            "undefined" != typeof google && (bounds = new google.maps.LatLngBounds), e.each(function (e, a) {
                t = a;
                var o = t.getAttribute("data-zoom"), i = "yes" == t.getAttribute("data-controls") ? "" : "no";
                mapType = t.getAttribute("data-maptype"), mapColor = t.getAttribute("data-mapcolor"), mapCenterLat = t.getAttribute("data-center-lat"), mapCenterLng = t.getAttribute("data-center-lng"), mapSaturation = t.getAttribute("data-mapsaturation"), ICO.map.createMap(t, o, i, mapType, mapColor, mapSaturation, jQuery(this))
            })
        }, getLatLong: function (t, e, a, o) {
            var i;
            i = new google.maps.Geocoder, i.geocode({address: t}, function (t, i) {
                o(t[0].geometry.location, t[0].geometry.location.lat(), t[0].geometry.location.lng(), e, a)
            })
        }, addWinContent: function (t, e, a) {
            google.maps.event.addListener(t, "click", function () {
                infowindow.setContent(e), infowindow.open(a, t)
            })
        }, addMarker: function (t, e, a, o, i, n, r) {
            var l;
            mapCoordinates = new google.maps.LatLng(latitude, longitude), e ? (companyPos = new google.maps.LatLng(latitude, longitude), l = new google.maps.Marker({
                position: mapCoordinates,
                map: t,
                icon: e,
                animation: google.maps.Animation.DROP
            })) : (companyPos = new google.maps.LatLng(latitude, longitude), l = new google.maps.Marker({
                position: mapCoordinates,
                map: t,
                animation: google.maps.Animation.DROP
            }));
            var s = '<div class="pinmarker">';
            "" !== a && (s += "<h3>" + a + "</h3>"), "" !== o && (s += "<p>" + o + " </p>"), "" !== i && "" !== r && (s += '<div><a href="' + i + '" target="_blank">' + r + "</a></div>"), s += "</div>", infowindow = new google.maps.InfoWindow, ICO.map.addWinContent(l, s, t), bounds.extend(mapCoordinates)
        }, createMap: function (t, e, a, o, i, n, r) {
            google && (directory_bounds = new google.maps.LatLngBounds);
            var l = "", s = !1, c = [], d = !1;
            jQuery(t).parent().find(".map-styles-array").length > 0 ? (d = !0, c = JSON.parse(jQuery(t).parent().find(".map-styles-array").text())) : ("mono-light" == n ? ("" === i && (i = "#ffffff"), n = -100) : "mono-dark" == n ? ("" === i && (i = "#222222"), n = -100, s = !0) : n = -20, c = [{stylers: [{hue: i}, {invert_lightness: s}, {saturation: n}]}]), isMobileAlt && (isDraggable = !1), mapTypeIdentifier = "satellite" === o ? google.maps.MapTypeId.SATELLITE : "terrain" === o ? google.maps.MapTypeId.TERRAIN : "hybrid" === o ? google.maps.MapTypeId.HYBRID : google.maps.MapTypeId.ROADMAP;
            var u = {
                zoom: parseInt(e, 10),
                scrollwheel: !1,
                draggable: isDraggable,
                mapTypeControl: !0,
                disableDefaultUI: a,
                mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
                navigationControl: !0,
                navigationControlOptions: {style: google.maps.NavigationControlStyle.SMALL},
                mapTypeId: mapTypeIdentifier,
                styles: c
            }, p = new google.maps.Map(t, u), m = r.parent().find(".pin_location").length;
            google.maps.event.addDomListener(window, "resize", function () {
                p.fitBounds(bounds), p.setZoom(parseInt(e, 10))
            }), bounds = new google.maps.LatLngBounds, r.parent().find(".pin_location").each(function (t, a) {
                l = a.getAttribute("data-pinimage"), pinTitle = a.getAttribute("data-title"), pinContent = a.getAttribute("data-content"), address = a.getAttribute("data-address"), pinLink = a.getAttribute("data-pinlink"), latitude = a.getAttribute("data-lat"), longitude = a.getAttribute("data-lng"), pinButtonText = a.getAttribute("data-button-text"), "" === latitude && "" === longitude ? ICO.map.getLatLong(address, pinTitle, l, function (t, a, o, i, n) {
                    latitude = a, longitude = o, pinTitle = i, l = n, ICO.map.addMarker(p, l, pinTitle, pinContent, pinLink, address, pinButtonText), m > 1 ? "" !== mapCenterLat && "" !== mapCenterLng ? (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(mapCenterLat, mapCenterLng))) : p.fitBounds(bounds) : (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(latitude, longitude)))
                }) : (ICO.map.addMarker(p, l, pinTitle, pinContent, pinLink, address, pinButtonText), m > 1 ? "" !== mapCenterLat && "" !== mapCenterLng ? (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(mapCenterLat, mapCenterLng))) : p.fitBounds(bounds) : (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(latitude, longitude))))
            })
        }
    }, ICO.blog = {
        init: function () {
            if ($(".blog-article-wrap .owl-carousel").length > 0) {
                var t = $(".owl-carousel");
                t.each(function () {
                    ICO.blog.articleCarouselInit($(this))
                })
            }
        }, articleCarouselInit: function (t) {
            var e = t.parent().find("data-carousel");
            if (e.data("auto"))var a = e.data("auto"); else var a = !1;
            t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                navigationText: [e.data("prev"), e.data("next")]
            })
        }
    }, ICO.footer = {
        init: function () {
            ICO.footer.backToTopInit(), ICO.footer.mobileAccordionInit()
        }, backToTopInit: function () {
            $(window).scroll(function () {
                $(this).scrollTop() > 100 ? $("#back-top").fadeIn() : $("#back-top").fadeOut()
            }), $("#back-top a").click(function () {
                return $("body,html").animate({scrollTop: 0}, 800), !1
            })
        }, mobileAccordionInit: function () {
            $(".mobile-button").addClass("active"), $(".mobile-button").click(function () {
                $(this).parents(".footer-block-title, .block-title").next().is(":visible") ? $(this).addClass("active") : $(this).removeClass("active"), $(this).parents(".footer-block-title, .block-title").next().toggle(400)
            })
        }
    }, ICO.onReady = {
        init: function () {
            ICO.header.init(), ICO.page.init(), ICO.collection.init(), ICO.blog.init(),
                ICO.footer.init(), ICO.verticleScroll.init(), ICO.productMediaManager.init()
        }
    }, ICO.onLoad = {
        init: function () {
            ICO.map.init()
        }
    }, $(document).ready(function () {
        ICO.onReady.init()
    }), $(window).load(function () {
        ICO.onLoad.init()
    })
}(jQuery);